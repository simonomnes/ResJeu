4
|---|
4   0

2) Le meilleur choix est le choix 1. Et AlphaBeta ne remet jamais rien en question.

3)Le 5 sera élagué, ainsi que le 2





utilité de Nim : la fonction d'utilité n'est évaluée que quand l'état est terminal, i.e lorsqu'il ne reste qu'une
allumette. Donc si c'est le cas on dit que c'est une défaite (-1) si l'ordinateur doit jouer, et une victoire (1)
si c'est à l'humain.
si l'état n'est pas terminal, on considèrera qu'aucun des dexu joueurs n'a l'avantage (0).


pour la rendre heuristique, on sait qu'il suffit en fait que le nombre d'allumettes soient congru à 1 modulo 5
pour donner une victoire garantie au joueur dont ce n'est pas le tour. cela a réduit le nombre de noeuds cherchés
drastiquement (on parle de 500000 sans la profondeur limitée à quelques centaines avec).


pour l'élagage, on rajoute fold_until_alpha et fold_until_beta des folds spéciaux pour quitter l'itération dès que value a une certaine valeur, et on ajoute des variables impératives pour pouvoir changer les valeurs de alpha et beta. 
on a implémenté directement l'élagage alpha-beta avec profondeur limitée, car il suffit d'enlever la condition d != 0 dans le code pour passer à une profondeur illimitée.

L'ordinateur ainsi créé ne me bat cependant pas à tous les coups, car le jeu des allumettes est facilement résolu et il est courant de se retrouver dans une situation ou la victoire est garantie, et ce sans 
avoir besoin de capacités de calcul inhumaines.



PUISSANCE 4 :

 
